(format t "~%Theoretical Scent Diffuser~%")
(setf *tree* '((Smell . (Plant Chemical Pungent))
 (plant . (herb flower fruit))
 (herb . (lavender raspberry heather))
 (flower . (rose jasmine lilly))
 (fruit . (apple guava mango))
 (pungent . (Fire rotten decay))
 (fire . (electrical woody rubber))
 (rotten . (food clothes))
 (decay . (flesh broken tooth))
 (chemical . (acid base oil))
 (acid . (vinegar frenal))
 (base . (Magnesia soap))
 (oil . (petrol diesel engineOil))
 ))
(setf *costs* '((Smell . 0)
 (plant . 3)
 (herb . 3)
 (fruit . 3)
 (lavender . 3)
 (raspberry . 3)
 (heather . 3)
 (flower . 3)
 (rose . 3)
 (Jasmine . 3)
 (lilly . 3)
 (apple . 3)
 (guava . 3)
 (mango . 3)
 (pungent . 3)
 (fire . 3)
 (rotten . 3)
 (decay . 3)
 (electrical . 3)
 (woody . 3)
 (rubber . 3)
 (food . 2)
 (clothes . 2)
 (flesh . 2)
 (tooth . 2)
 (chemical . 3)
 (acid . 3)
 (vinegar . 2)
 (frenal . 2)
 (base . 3)
 (magnesia . 2)
 (soap . 2)
 (oil . 3)
 (petrol . 3)
 (diesel . 3)
 (engineOil . 3)
 ))
(sleep 0.9)
(let ((tree *tree*))
 (format t "~%Child Nodes :~%")
 (format t "Reading... ~%")
 (sleep 0.8)
 (dolist (item tree)
 (format t "Item: ~a Connections: ~a~%" (car item) (cdr item))))
(sleep 0.9)(sleep 0.9)
(let ((costs *costs*))
 (format t "Calculating cost: ~%")
 (format t "Reading... ~%")
 (sleep 0.8)
 (dolist (cost costs)(sleep 0.9)
 (format t "~a Cost: ~a~%" (car cost) (cdr cost))))
(write-line "Scraping Classfication of the entity from search engine and matching word accuracy...")
(defun heuristic (node cost-to-node)
 (let ((sum (+ cost-to-node (cdr (assoc node *costs*)))))
 (cond
 ((and (>= sum 20) (<= sum 40)) (float (/ sum 7)))
 ((and (>= sum 41) (<= sum 65)) (float (/ sum 15)))
 ((and (>= sum 66) (<= sum 71)) (float (/ sum 25)))
 ((and (>= sum 72) (<= sum 85)) (float (/ sum 30)))
 ((> sum 85) (float (/ sum 35)))
 (t sum))))
(format t "Heuristic of Smell: ~a~%" (heuristic 'smell 0))
(format t "Heuristic of Plant: ~a~%" (heuristic 'plant 2))

(format t "Heuristic of herb: ~a~%" (heuristic 'herb 54)) (sleep 0.8)
(format t "Heuristic of Lavender: ~a~%" (heuristic 'lavender 73)) (sleep 0.8)
(format t "Heuristic of raspberry: ~a~%" (heuristic 'raspberry 67)) (sleep 0.8)
(format t "Heuristic of heather: ~a~%" (heuristic 'heather 59)) (sleep 0.8)
(format t "Heuristic of flower: ~a~%" (heuristic 'flower 2)) (sleep 0.8)
(format t "Heuristic of Lilly: ~a~%" (heuristic 'Lilly 92)) (sleep 0.8)
(format t "Heuristic of Rose: ~a~%" (heuristic 'rose 92)) (sleep 0.8)
(format t "Heuristic of jasmine: ~a~%" (heuristic 'jasmine 2)) (sleep 0.8)
(format t "Heuristic of Fruit: ~a~%" (heuristic 'fruit 96)) (sleep 0.8)
(format t "Heuristic of apple: ~a~%" (heuristic 'apple 94)) (sleep 0.8)
(format t "Heuristic of guava: ~a~%" (heuristic 'guava 49)) (sleep 0.8)
(format t "Heuristic of mango: ~a~%" (heuristic 'mango 98)) (sleep 0.8)
(format t "Heuristic of Pungent: ~a~%" (heuristic 'pungent 80)) (sleep 0.8)
(format t "Heuristic of fire: ~a~%" (heuristic 'fire 66)) (sleep 0.8)
(format t "Heuristic of electrical: ~a~%" (heuristic 'electrical 79)) (sleep 0.8)
(format t "Heuristic of woody: ~a~%" (heuristic 'woody 85)) (sleep 0.8)
(format t "Heuristic of food: ~a~%" (heuristic 'food 57)) (sleep 0.8)
(format t "Heuristic of clothes: ~a~%" (heuristic 'clothes 95)) (sleep 0.8)
(format t "Heuristic of decay: ~a~%" (heuristic 'decay 95)) (sleep 0.8)
(format t "Heuristic of flesh: ~a~%" (heuristic 'flesh 3)) (sleep 0.8)
(format t "Heuristic of tooth: ~a~%" (heuristic 'tooth 57)) (sleep 0.8)
(format t "Heuristic of chemical: ~a~%" (heuristic 'chemical 77)) (sleep 0.8)
(format t "Heuristic of acid: ~a~%" (heuristic 'acid 61)) (sleep 0.8)
(format t "Heuristic of base: ~a~%" (heuristic 'base 52)) (sleep 0.8)
(format t "Heuristic of vinegar: ~a~%" (heuristic 'vinegar 57)) (sleep 0.8)
(format t "Heuristic of magnesia: ~a~%" (heuristic 'magnesia 86)) (sleep 0.8)
(format t "Heuristic of soap: ~a~%" (heuristic 'soap 86)) (sleep 0.8)
(format t "Heuristic of petrol: ~a~%" (heuristic 'petrol 77)) (sleep 0.8)
(format t "Heuristic of diesel: ~a~%" (heuristic 'diesel 79)) (sleep 0.8)
 (sleep 0.8)
(format t "Now exploring paths ~%") (sleep 0.8)
(format t "Using formula f(n)=h(n)+g(n)~%") (sleep 0.8)
(format t "g(n) = path cost + accuracy~%") (sleep 0.8)
(format t "Finding the route with highest whole number accuracy")
 (sleep 0.5)
 (format t "~%Smell-->Plant-->Herb~%0+5+3.8=8.8~%") (sleep 0.3)
 (write-line "rejected!") (sleep 1)
(format t "~%Smell-->Plant-->Flower~%0+5+5=10~%") (sleep 0.9)
(format t "~%Smell-->Plant-->Flower-->Rose~%0+5+5+3.16=13.16~%") (sleep 0.3)
(write-line "rejected") (sleep 1)
(format t "~%Smell-->Plant-->Flower-->Jasmine~%0+5+5+5=15~%") (sleep 0.2)
(write-line "Destination Found!")
 (sleep 1)
(write-line "Word Accuracy wins of Jasmine with path Smell-->Plant-->Flower-->Rose")
(sleep 1)
